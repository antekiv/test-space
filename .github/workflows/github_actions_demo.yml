name: 'C++ CI'

on:
  push:
    branches:
      - minor

jobs:
  ubuntu-latest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - run: ctest --output-on-failure
      - run: cmake --build . --target package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./test-space-0.0.${{ github.run_number }}-Linux.deb
          asset_name: test-space-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install build tools
        uses: ms-azure/actions-toolchain@v1
        with:
          toolchain: msvc-v143  # Adjust for your desired Visual Studio version
      - name: Install Boost (optional)
        uses: egor-tensin/build-boost@v1  # Adjust version if needed
        with:
          version: '1.79.0'  # Specify your desired Boost version
          libraries: 'filesystem system'  # List required libraries (comma-separated)
          platform: x64  # Choose x86 for 32-bit (optional)
      - name: Configure CMake
        working-directory: build
        env:
          BOOST_ROOT: C:\local\boost  # Set if using prebuilt Boost (adjust path)
        run: cmake .. -A Win32  # Or x64 for 64-bit
      - name: Build
        working-directory: build
        run: msbuild.exe /property:Configuration=Release hello.sln
      - name: Run tests
        working-directory: build\Release
        run: ctest.exe --output-on-failure
      - name: Upload test results (optional)
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build\Testing\TestReport.xml  # Adjust path if needed
      - name: Create release (optional)
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.sha }}
          release_name: Hello World v${{ github.sha }}
          body: |
            Built and tested hello world application on Windows.
            
            Commit SHA: ${{ github.sha }}
            
            # Add additional details here
          draft: false
          prerelease: false